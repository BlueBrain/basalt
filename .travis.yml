# Adapted from various sources, including:
# - Louis Dionne's Hana: https://github.com/ldionne/hana
# - Paul Fultz II's FIT: https://github.com/pfultz2/Fit
# - Eric Niebler's range-v3: https://github.com/ericniebler/range-v3
# - Gabi Melman spdlog: https://github.com/gabime/spdlog
sudo: required
language: cpp

addons: &gcc7
  apt:
    packages:
      - g++-7
      - librocksdb-dev
      - python3-setuptools
      - valgrind
    sources:
      - ubuntu-toolchain-r-test

addons: &clang6
  apt:
    packages:
      - clang-6.0
      - librocksdb-dev
      - python3-setuptools
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-xenial-6.0

addons: &clang7
  apt:
    packages:
      - clang-7
      - librocksdb-dev
      - python3-setuptools
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-xenial-7

matrix:
  allow_failures:
    - os: osx
  include:
      # Test gcc-7: C++11
    - env: GCC_VERSION=7 CXX_OPTIMIZE=OFF CPP=11 VALGRIND="-T memcheck"
      os: linux
      dist: xenial
      addons: *gcc7

      # Test clang-6.0: C++11
    - env: CLANG_VERSION=6.0 CXX_OPTIMIZE=OFF CPP=11
      os: linux
      dist: xenial
      addons: *clang6

      # Test clang-7.0: C++11
    - env: CLANG_VERSION=7 CXX_OPTIMIZE=OFF CPP=11
      os: linux
      dist: xenial
      addons: *clang7

      # osx
    - env: CXX_OPTIMIZE=OFF CPP=11
      os: osx
      addons:
        homebrew:
          packages:
          - rocksdb

before_script:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export CXX="clang++" CC="clang"; fi
  - which $CXX
  - which $CC
  - $CXX --version
  - cmake --version

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p build && cd build
  - |
    cmake .. \
      --warn-uninitialized \
      -DUSE_CLANG_TIDY:BOOL=ON \
      -DBasalt_CXX_OPTIMIZE:BOOL=$CXX_OPTIMIZE \
      -DPYTHON_EXECUTABLE:FILEPATH=`which python3` \
      -DCMAKE_CXX_STANDARD=$CPP \
  - make VERBOSE=1 -j2
  - ctest -VV -j2 --output-on-failure ${VALGRIND}
  - cd ${TRAVIS_BUILD_DIR}
  - python3 setup.py sdist
  - cd dist
  - tarball=`echo *.tar.gz`
  - tar zxf ${tarball}
  - cd ${tarball%.tar.gz}
  - python setup.py test

notifications:
  email: false
